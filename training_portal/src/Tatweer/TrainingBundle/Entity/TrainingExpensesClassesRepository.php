<?php

namespace Tatweer\TrainingBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * TrainingExpensesClassesRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TrainingExpensesClassesRepository extends EntityRepository
{
    public function findIfUniqueName(array $data)
    {
        if($data['idClass'] != NULL )
        {
        return $this->getEntityManager()
            ->createQuery(
                "SELECT p FROM TatweerTrainingBundle:TrainingExpensesClasses p WHERE p.name = '".$data['name']."'  AND p.idClass <> ".$data['idClass']."  "
            )
            ->getResult();
        }
         else {
             return $this->getEntityManager()
            ->createQuery(
                "SELECT p FROM TatweerTrainingBundle:TrainingExpensesClasses p WHERE p.name = '".$data['name']."' "
            )
            ->getResult();
             }
        
    }
    
    public function getNonManagableCostItems($training_id)
    {
        $em          = $this->getEntityManager();
        $query = $em->createQueryBuilder()
          ->from('TatweerTrainingBundle:TrainingExpensesClasses', 't')
          ->select(" t.name , t.idClass ,  v.value ")
          ->leftJoin('TatweerTrainingBundle:TrainingExpenses', 'v', 'WITH', 't.idClass = v.expenseClass AND v.training ='.$training_id )
          ->where("t.manageable = 0 AND t.active = 1" )
          ->getQuery();
        
        if($results = $query->getArrayResult())
            return $results; 
        return false;

    }
    
    public function getManagableCostItems($training_id)
    {
        $em          = $this->getEntityManager();
        $query = $em->createQueryBuilder()
          ->from('TatweerTrainingBundle:TrainingExpenses', 'v')
          ->select(" t.name , t.idClass ,  v.value ")
          ->leftJoin('TatweerTrainingBundle:TrainingExpensesClasses', 't', 'WITH', 't.idClass = v.expenseClass' )
          ->where("t.manageable = 1 AND t.active = 1 AND v.training =".$training_id )
          ->getQuery();
        
        if($results = $query->getArrayResult())
            return $results; 

        return false;
    }
    
  
}



