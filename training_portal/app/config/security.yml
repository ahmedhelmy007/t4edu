# you can read more about security in the related section of the documentation
# http://symfony.com/doc/current/book/security.html
security:
    
    hide_user_not_found:  false #show error message if it is an user not found or a password problem
    
    # http://symfony.com/doc/current/book/security.html#encoding-the-user-s-password
    encoders:
        #Symfony\Component\Security\Core\User\User: plaintext
        Tatweer\TrainingBundle\Entity\Users: 
            algorithm:   sha1
            encode_as_base64: false
            iterations: 1
            
    # http://symfony.com/doc/current/book/security.html#hierarchical-roles
    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    # http://symfony.com/doc/current/book/security.html#where-do-users-come-from-user-providers
    providers:
#        in_memory:
#            memory:
#                users:
#                    #- { name: site-admin, password: 123456, roles: [ 'ROLE_USER' ] }
#                    in_memory_admin:  { password: password, roles: [ 'ROLE_ADMIN' ] }
        tatweer:
            entity: 
                class: Tatweer\TrainingBundle\Entity\Users
                property: username
#        webservice:
#            id: webservice_user_provider        
    # the main part of the security, where you can set up firewalls
    # for specific sections of your app
    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false
        # the login page has to be accessible for everybody
        demo_login:
            pattern:  ^/demo/secured/login$
            security: false

        # secures part of the application
        demo_secured_area:
            pattern:    ^/demo/secured/
            # it's important to notice that in this case _demo_security_check and _demo_login
            # are route names and that they are specified in the AcmeDemoBundle
            form_login:
                check_path: _demo_security_check
                login_path: _demo_login
            logout:
                path:   _demo_logout
                target: _demo
            #anonymous: ~
            #http_basic:
            #    realm: "Secured Demo Area"
        
        login_page:
            pattern:  ^/(?:[a-z]{2})/auth/login
            security: false

        #default secured areas
        default:
            pattern: ~
            security: true
            form_login:
                check_path: login_checker
                login_path: login_route
        
    # with these settings you can restrict or allow access for different parts
    # of your application based on roles, ip, host or methods
    # http://symfony.com/doc/current/book/security.html#security-book-access-control-matching-options
    access_control:
        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin, roles: ROLE_USER }

    acl:
        connection: default